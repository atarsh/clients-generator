apply plugin: 'maven-publish'
apply plugin: 'signing'

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getRepositoryUsername() {
    return System.getenv("NEXUS_USERNAME")
}

def getRepositoryPassword() {
    return System.getenv("NEXUS_PASSWORD")
}

afterEvaluate { project ->
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.release
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                VERSION_NAME = kalturaClientVersion
                version = VERSION_NAME

                repositories {
                    maven {
                        def releasesRepoUrl = getReleaseRepositoryUrl()
                        url = releasesRepoUrl
                        credentials {
                            username getRepositoryUsername()
                            password getRepositoryPassword()
                        }
                    }
                }

                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }
                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                        }
                    }
                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }
                }
            }
        }
    }

    signing {
        allprojects { ext."signing.keyId" = System.getenv("MAVEN_KEYID") }
        allprojects { ext."signing.password" = System.getenv("MAVEN_PASSWORD") }
        allprojects { ext."signing.secretKeyRingFile" = System.getenv("MAVEN_SECRING_PATH") } // TODO SIGNING_KEY 

        sign publishing.publications.mavenJava
    }

    task androidSourcesJar(type: Jar) {
        classifier 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
    }
}
